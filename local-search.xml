<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>线性表</title>
    <link href="/2021/04/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <url>/2021/04/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="线性表的基本操作："><a href="#线性表的基本操作：" class="headerlink" title="线性表的基本操作："></a>线性表的基本操作：</h1><p>插入操作：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//插入操作。在表L中的第i个位置上插入指定元素e。</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">ListInsert</span><span class="hljs-params">(SqList *L, <span class="hljs-keyword">int</span> i, ElemType e)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (i &lt; <span class="hljs-number">1</span> || i &gt; L-&gt;length + <span class="hljs-number">1</span>;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(L-&gt;length&gt;=MaxSize)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=L-&gt;length;j&gt;=i;j--)<br>        L-&gt;data[j]=L.data[j<span class="hljs-number">-1</span>];<br>    L-&gt;data[i]=e;<br>    L-&gt;length++;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>删除操作：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//删除操作。删除表L中第i个位置的元素，并用e返回删除元素的值。</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">ListDelete</span><span class="hljs-params">(SqList *L, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> *e)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (i &lt; <span class="hljs-number">1</span> || i &gt; L-&gt;length)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    e = L-&gt;data[i - <span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i; j &lt; L-&gt;length; j++)<br>        L-&gt;data[j - <span class="hljs-number">1</span>] = L-&gt;data[j];<br>    L-&gt;length--;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>按值查找（顺序查找）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//按值查找操作。在表L中查找具有给定关键字值的元素。</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">LocateElem</span><span class="hljs-params">(SqList *L, <span class="hljs-keyword">int</span> e)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; L-&gt;length; i++)<br>        <span class="hljs-keyword">if</span> (L-&gt;data[i] == e)<br>            <span class="hljs-keyword">return</span> i + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>考研</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5和CSS3的新特性</title>
    <link href="/2020/08/14/Web/HTML5%E5%92%8CCSS3%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <url>/2020/08/14/Web/HTML5%E5%92%8CCSS3%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS笔记（高级技巧）</title>
    <link href="/2020/08/14/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7%EF%BC%89/"/>
    <url>/2020/08/14/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="精灵图"><a href="#精灵图" class="headerlink" title="精灵图"></a>精灵图</h1><h2 id="为什么需要精灵图"><a href="#为什么需要精灵图" class="headerlink" title="为什么需要精灵图"></a>为什么需要精灵图</h2><p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。 </p><p>因此，<strong>为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度</strong>，出现了 <strong>CSS 精灵技术</strong>（也称 CSS Sprites、CSS 雪碧）。 </p><p><strong>核心原理：将网页中的一些小背景图像整合到一张大图中 ，这样服务器只需要一次请求就可以了。</strong></p><h2 id="精灵图（sprites）的使用"><a href="#精灵图（sprites）的使用" class="headerlink" title="精灵图（sprites）的使用"></a>精灵图（sprites）的使用</h2><p>使用精灵图核心：</p><ol><li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。</li><li>这个大图片也称为 sprites 精灵图 或者 雪碧图。</li><li>移动背景图片位置， 此时可以使用 <strong>background-position</strong> 。 </li><li>移动的距离就是这个目标图片的 <strong>x 和 y 坐标</strong>。注意网页中的坐标有所不同。</li><li>因为一般情况下都是往上往左移动，所以数值是负值。</li><li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。</li></ol><p>使用精灵图核心总结：</p><ol><li>精灵图主要针对于小的背景图片使用。</li><li>主要借助于背景位置来实现 — <strong>background-position</strong>。</li><li>一般情况下精灵图都是负值。（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴同理。）</li></ol><h1 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h1><h2 id="字体图标的产生"><a href="#字体图标的产生" class="headerlink" title="字体图标的产生"></a>字体图标的产生</h2><p>字体图标使用场景： 主要用于显示网页中通用、常用的一些小图标。</p><p>精灵图是有诸多优点的，但缺点很明显：</p><ol><li>图片文件比较大的。</li><li>图片本身放大和缩小会失真。</li><li>一旦图片制作完毕想要更换非常复杂。</li></ol><p>此时，有一种技术的出现很好的解决了以上问题，就是<strong>字体图标 iconfont</strong>。</p><p><strong>字体图标</strong>可以为前端工程师提供一种方便高效的图标使用方式，<strong>展示的是图标，本质属于字体</strong>。</p><h2 id="字体图标的优点"><a href="#字体图标的优点" class="headerlink" title="字体图标的优点"></a>字体图标的优点</h2><ul><li>轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求。</li><li>灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等。</li><li>兼容性：几乎支持所有的浏览器。</li></ul><p><strong>注意： 字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。</strong></p><p><strong>总结：</strong></p><ol><li>如果遇到一些结构和样式比较简单的小图标，就用字体图标。</li><li>如果遇到一些结构和样式复杂一点的小图片，就用精灵图。</li></ol><h2 id="字体图标的下载"><a href="#字体图标的下载" class="headerlink" title="字体图标的下载"></a>字体图标的下载</h2><p>推荐下载网站：</p><ul><li><strong>icomoon 字库</strong> <a href="http://icomoon.io/">http://icomoon.io</a> </li><li><strong>阿里 iconfont 字库</strong> <a href="http://www.iconfont.cn/">http://www.iconfont.cn</a></li></ul><h2 id="字体图标的引入"><a href="#字体图标的引入" class="headerlink" title="字体图标的引入"></a>字体图标的引入</h2><h3 id="把下载包里面的-fonts-文件夹放入页面根目录下。"><a href="#把下载包里面的-fonts-文件夹放入页面根目录下。" class="headerlink" title="把下载包里面的 fonts 文件夹放入页面根目录下。"></a>把下载包里面的 fonts 文件夹放入页面根目录下。</h3><p><img src="http://img.cster.xyz/images/%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87%E7%9A%84%E4%BD%BF%E7%94%A8.png"></p><h3 id="在-CSS-样式中全局声明字体：-简单理解把这些字体文件通过css引入到我们页面中。"><a href="#在-CSS-样式中全局声明字体：-简单理解把这些字体文件通过css引入到我们页面中。" class="headerlink" title="在 CSS 样式中全局声明字体： 简单理解把这些字体文件通过css引入到我们页面中。"></a>在 CSS 样式中全局声明字体： 简单理解把这些字体文件通过css引入到我们页面中。</h3><p>注意字体文件路径的问题。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line">     <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2&#x27;</span>);</span><br><span class="line">     <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line">         <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.ttf?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line">         <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.woff?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line">         <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.svg?7kkyc2#icomoon&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">     <span class="attribute">font-weight</span>: normal;</span><br><span class="line">     <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="html-标签内添加小图标。"><a href="#html-标签内添加小图标。" class="headerlink" title="html 标签内添加小图标。"></a>html 标签内添加小图标。</h3><p><img src="http://img.cster.xyz/images/%E5%9B%BE%E6%A0%87%E5%A4%8D%E5%88%B6.png"></p><p>直接复制箭头指向的图标</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="给标签定义字体。"><a href="#给标签定义字体。" class="headerlink" title="给标签定义字体。"></a>给标签定义字体。</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;icomoon&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>务必保证，这个字体和上面**@font-face<strong>里面的字体</strong>保持一致**。</p><h3 id="字体文件格式"><a href="#字体文件格式" class="headerlink" title="字体文件格式"></a>字体文件格式</h3><p>不同浏览器所支持的字体格式是不一样的，字体图标之所以兼容，就是因为包含了主流浏览器支持的字体文件。</p><ol><li>TureType(<strong>.ttf</strong>)格式.ttf字体是Windows和Mac的最常见的字体，支持这种字体的浏览器有IE9+、Firefox3.5+、 Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+；</li><li>Web Open Font Format(<strong>.woff</strong>)格式woff字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome6+、 Safari3.6+、Opera11.1+；</li><li>Embedded Open Type(<strong>.eot</strong>)格式.eot字体是IE专用字体，支持这种字体的浏览器有IE4+；</li><li>SVG(<strong>.svg</strong>)格式.svg字体是基于SVG字体渲染的一种格式，支持这种字体的浏览器有Chrome4+、Safari3.1+、 Opera10.0+、iOS Mobile Safari3.2+；</li></ol><h2 id="字体图标的追加"><a href="#字体图标的追加" class="headerlink" title="字体图标的追加"></a>字体图标的追加</h2><p>如果工作中，原来的字体图标不够用了，我们需要添加新的字体图标到原来的字体文件中。</p><p>把压缩包里面的 <strong>selection.json 重新上传</strong>，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可。</p><p><img src="http://img.cster.xyz/images/%E6%9B%B4%E6%96%B0%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87.png"></p><h1 id="CSS三角"><a href="#CSS三角" class="headerlink" title="CSS三角"></a>CSS三角</h1><p>网页中常见一些三角形，使用 CSS 直接画出来就可以，不必做成图片或者字体图标。</p><p>做法如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">     <span class="attribute">border-left-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS 笔记（定位）</title>
    <link href="/2020/08/09/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E5%AE%9A%E4%BD%8D%EF%BC%89/"/>
    <url>/2020/08/09/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E5%AE%9A%E4%BD%8D%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="定位组成"><a href="#定位组成" class="headerlink" title="定位组成"></a>定位组成</h1><p><strong>定位</strong>：将盒子定在某一个位置，所以<strong>定位也是在摆放盒子， 按照定位的方式移动盒子</strong>。</p><p>定位 = 定位模式 + 边偏移。</p><p><strong>定位模式</strong>用于指定一个元素在文档中的定位方式。<strong>边偏移</strong>则决定了该元素的最终位置。</p><h2 id="定位模式"><a href="#定位模式" class="headerlink" title="定位模式"></a>定位模式</h2><p>定位模式决定元素的定位方式 ，它通过 CSS 的 <strong>position 属性</strong>来设置，其值可以分为四个：</p><table><thead><tr><th align="center">值</th><th align="center">语义</th></tr></thead><tbody><tr><td align="center">static</td><td align="center"><strong>静态</strong>定位</td></tr><tr><td align="center">relative</td><td align="center"><strong>相对</strong>定位</td></tr><tr><td align="center">absolute</td><td align="center"><strong>绝对</strong>定位</td></tr><tr><td align="center">fixed</td><td align="center"><strong>固定</strong>定位</td></tr></tbody></table><h2 id="边偏移"><a href="#边偏移" class="headerlink" title="边偏移"></a>边偏移</h2><p>边偏移就是定位的盒子移动到最终位置。有 top、bottom、left 和 right 4 个属性。</p><table><thead><tr><th>边偏移属性</th><th>示例</th><th>描述</th></tr></thead><tbody><tr><td>top</td><td>top: 80px</td><td><strong>顶端</strong>偏移量，定义元素相对于其父元素<strong>上边线的距离</strong>。</td></tr><tr><td>bottom</td><td>bottom: 80px</td><td><strong>底部</strong>偏移量，定义元素相对于其父元素<strong>下边线的距离</strong>。</td></tr><tr><td>left</td><td>left: 80px</td><td><strong>左侧</strong>偏移量，定义元素相对于其父元素<strong>左边线的距离</strong>。</td></tr><tr><td>right</td><td>right: 80px</td><td><strong>右侧</strong>偏移量，定义元素相对于其父元素<strong>右边线的距离</strong>。</td></tr></tbody></table><h2 id="静态定位-static"><a href="#静态定位-static" class="headerlink" title="静态定位 static"></a>静态定位 static</h2><p>静态定位是元素的默认定位方式，无定位的意思。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: static; &#125;</span><br></pre></td></tr></table></figure><ul><li>静态定位按照标准流特性摆放位置，它没有边偏移</li><li>静态定位在布局时很少用到</li></ul><h2 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位 relative"></a>相对定位 relative</h2><p>相对定位是元素在移动位置的时候，是相对于它原来的位置来说的（自恋型）。</p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS 笔记（浮动）</title>
    <link href="/2020/08/09/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E6%B5%AE%E5%8A%A8%EF%BC%89/"/>
    <url>/2020/08/09/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E6%B5%AE%E5%8A%A8%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS 笔记（盒子模型）</title>
    <link href="/2020/08/09/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%EF%BC%89/"/>
    <url>/2020/08/09/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS 笔记（二）</title>
    <link href="/2020/07/21/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2020/07/21/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="CSS-的复合选择器"><a href="#CSS-的复合选择器" class="headerlink" title="CSS 的复合选择器"></a>CSS 的复合选择器</h1><h2 id="什么是复合选择器"><a href="#什么是复合选择器" class="headerlink" title="什么是复合选择器"></a>什么是复合选择器</h2><p>在 CSS 中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。</p><ul><li>复合选择器可以更准确、更高效的选择目标元素（标签）。</li><li>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的。</li><li>常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等。</li></ul><h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><p>后代选择器又称为包含选择器，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素1 元素2 &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素 1 里面的所有元素 2 （后代元素）。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ul li &#123; 样式声明 &#125; &#x2F;* 选择 ul 里面所有的 li标签元素 *&#x2F;</span><br></pre></td></tr></table></figure><ul><li>元素 1 和 元素 2 中间用<strong>空格隔开</strong>。</li><li>元素 1 是父级，元素 2 是子级，最终选择的是<strong>元素 2</strong>。</li><li>元素 2 可以是儿子，也可以是孙子等，只要是元素 1 的后代即可。</li><li>元素 1 和 元素 2 可以是任意基础选择器。</li></ul><h2 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h2><p><strong>子元素选择器（子选择器）</strong>只能选择作为某元素的最近一级子元素。简单理解就是选亲儿子元素。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素1 &gt; 元素2 &#123; 样式声明 &#125; </span><br></pre></td></tr></table></figure><p>上述语法表示<strong>选择元素1 里面的所有直接后代(子元素) 元素2</strong>。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &gt; p &#123; 样式声明 &#125; &#x2F;* 选择 div 里面所有最近一级 p 标签元素 *&#x2F;</span><br></pre></td></tr></table></figure><ul><li>元素 1 和 元素 2 中间用 <strong>大于号 &gt;</strong> 隔开。</li><li>元素 1 是父级，元素 2 是子级，<strong>最终选择的是元素 2</strong>。</li><li>元素 2 必须是<strong>子代</strong>，其孙子、重孙之类都不归他管。</li></ul><h2 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h2><p><strong>并集选择器可以选择多组标签, 同时为他们定义相同的样式。</strong>通常用于集体声明。</p><p>并集选择器是各选择器<strong>通过英文逗号（,）连接而成</strong>，任何形式的选择器都可以作为并集选择器的一部分。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素1,元素2 &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示<strong>选择元素1 和 元素2</strong>。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ul,div &#123; 样式声明 &#125; &#x2F;* 选择 ul 和 div标签元素 *&#x2F; </span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用逗号隔开。</li><li>逗号可以理解为和的意思。</li><li>并集选择器通常用于集体声明。</li></ul><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><p>伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。</p><p>伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover 、 :first-child 。</p><p>以下为常用的一些伪类选择器。</p><h3 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h3><p><strong>链接伪类选择器注意事项：</strong></p><ol><li><strong>为了确保生效，请按照 LVHA 的循顺序声明 :link－:visited－:hover－:active。</strong></li><li>记忆法：love hate 或者 lv 包包 hao。</li><li>因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式。</li></ol><p><strong>链接伪类选择器实际工作开发中的写法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* a 是标签选择器 所有的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* :hover 是链接伪类选择器 鼠标经过 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red; <span class="comment">/* 鼠标经过的时候，由原来的 灰色 变成了红色 */</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="focus-伪类选择器"><a href="#focus-伪类选择器" class="headerlink" title=":focus 伪类选择器"></a>:focus 伪类选择器</h3><p>:focus 伪类选择器用于选取获得焦点的表单元素。</p><p>焦点就是光标，一般情况 &lt;input&gt; 类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="复合选择器总结"><a href="#复合选择器总结" class="headerlink" title="复合选择器总结"></a>复合选择器总结</h2><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符合及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>是后代就可以</td><td>较多</td><td>符号是<strong>空格</strong> .nav a</td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选择子代</td><td>较少</td><td>符号是<strong>大于</strong> .nav&gt;p</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是<strong>逗号</strong> .nav, .header</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>和链接相关</td><td>较多</td><td>重点记住 a{} 和 a:hover 实际开发的写法</td></tr><tr><td>:focus选择器</td><td>选择获得光标的表单</td><td>和表单相关</td><td>较少</td><td>input:focus 记住这个写法</td></tr></tbody></table><h1 id="CSS-的元素显示模式"><a href="#CSS-的元素显示模式" class="headerlink" title="CSS 的元素显示模式"></a>CSS 的元素显示模式</h1><h2 id="什么是元素显示模式"><a href="#什么是元素显示模式" class="headerlink" title="什么是元素显示模式"></a>什么是元素显示模式</h2><p>元素显示模式就是<strong>元素（标签）以什么方式进行显示</strong>，比如 &lt;div&gt; 自己占一行，比如一行可以放多个&lt;span&gt;。</p><p>HTML 元素一般分为<strong>块元素</strong>和<strong>行内元素</strong>两种类型。</p><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><p>常见的块元素有 &lt;h&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt; 等，其中 &lt;div&gt; 标签是最典型的块元素。</p><p>块级元素的特点：</p><ol><li>比较霸道，自己独占一行。</li><li>高度、宽度、外边距以及内边距都可以控制。</li><li>宽度默认是容器（父级宽度）的100%。</li><li>是一个容器及盒子，里面可以放行内或者块级元素。</li></ol><p><strong>注意：</strong></p><ol><li>文字类的元素内不能使用块级元素。</li><li>&lt;p&gt; 标签主要用于存放文字，因此里面不能放块级元素，特别是不能放 &lt;div&gt;。</li><li>同理， &lt;h&gt;~&lt;h6&gt; 等都是文字类块级标签，里面也不能放其他块级元素。</li></ol><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><p>常见的行内元素有&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;等，其中 &lt;span&gt;标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><ol><li>相邻行内元素在一行上，一行可以显示多个。</li><li>高、宽直接设置是无效的。</li><li>默认宽度就是它本身内容的宽度。</li><li>行内元素只能容纳文本或其他行内元素。</li></ol><p><strong>注意：</strong></p><ul><li>链接里面不能再放链接。</li><li>特殊情况链接 &lt;a&gt; 里面可以放块级元素，但是给 &lt;a&gt; 转换一下块级模式最安全。</li></ul><h2 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h2><p>在行内元素中有几个特殊的标签 —— &lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;，它们<strong>同时具有块元素和行内元素的特点</strong>。<br>有些资料称它们为<strong>行内块元素</strong>。</p><p><strong>行内块元素的特点：</strong></p><ol><li>和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）。</li><li>默认宽度就是它本身内容的宽度（行内元素特点）。</li><li>高度，行高、外边距以及内边距都可以控制（块级元素特点）。</li></ol><h2 id="元素显示模式总结"><a href="#元素显示模式总结" class="headerlink" title="元素显示模式总结"></a>元素显示模式总结</h2><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽带高度</td><td>容器的100%</td><td>容器级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以设置宽带高度</td><td>它本身内容的高度</td><td>容纳文本或者其他行内元素</td></tr><tr><td>行内块元素</td><td>一行可以放多个行内块元素</td><td>可以设置宽带高度</td><td>它本身内容的高度</td><td></td></tr></tbody></table><h2 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h2><p>特殊情况下，我们需要元素模式的转换，简单理解: 一个模式的元素需要另外一种模式的特性。</p><p>比如想要增加链接 &lt;a&gt; 的触发范围。</p><ul><li>转换为块元素：display:block;</li><li>转换为行内元素：display:inline;</li><li>转换为行内块：display: inline-block;</li></ul>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS 笔记（一）</title>
    <link href="/2020/07/16/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/07/16/Web/CSS%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="CSS-简介"><a href="#CSS-简介" class="headerlink" title="CSS 简介"></a>CSS 简介</h1><p>CSS 是层叠样式表 ( Cascading Style Sheets ) 的简称。有时我们也会称之为 CSS 样式表或级联样式表。</p><p>CSS 是也是一种标记语言。</p><p>CSS 主要用于设置 HTML 页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、 边距等）以及版面的布局和外观显示样式。</p><p>CSS 让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：CSS 可以美化 HTML , 让 HTML 更漂亮， 让页面布局更简单。</p><p><strong>总结：</strong></p><ol><li>HTML 主要做结构,显示元素内容。</li><li>CSS 美化 HTML ,布局网页。</li><li>CSS 最大价值：由 HTML 专注去做结构呈现，样式交给 CSS，即 结构 ( HTML ) 与样式( CSS ) 相分离。</li></ol><h2 id="CSS-语法规范"><a href="#CSS-语法规范" class="headerlink" title="CSS 语法规范"></a>CSS 语法规范</h2><p>CSS 规则由两个主要的部分构成：选择器以及一条或多条声明。</p><p><img src="http://img.cster.xyz/images/CSS-%E9%80%89%E6%8B%A9%E5%99%A8.png"></p><ul><li><strong>选择器</strong>是用于指定 CSS 样式的 <strong>HTML 标签</strong>，花括号内是对该对象设置的具体样式</li><li>属性和属性值以 ”键值对” 的形式出现</li><li>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等</li><li>属性和属性值之间用英文 “:” 分开</li><li>多个“键值对”之间用英文 “;” 进行区分</li></ul><p>所有的样式，都包含在 &lt;style&gt; 标签内，表示是样式表。&lt;style&gt; 一般写到 &lt;/head&gt; 上方。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h4 &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS-代码风格"><a href="#CSS-代码风格" class="headerlink" title="CSS 代码风格"></a>CSS 代码风格</h2><p>以下代码书写风格不是强制规范，而是符合实际开发书写方式。</p><p><strong>样式格式书写</strong></p><p>紧凑风格</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deepink;<span class="attribute">font-size</span>: <span class="number">20px</span>; &#125;</span><br></pre></td></tr></table></figure><p>展开格式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>推荐第二种格式， 因为更直观。</p><p><strong>样式大小写</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">H3</span> &#123;</span><br><span class="line">    <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>推荐样式选择器，属性名，属性值关键字全部使用小写字母，特殊情况除外。</p><p><strong>空格规范</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>属性值前面，冒号后面，保留一个空格</li><li>选择器（标签）和大括号中间保留空格</li></ol><h1 id="CSS-基础选择器"><a href="#CSS-基础选择器" class="headerlink" title="CSS 基础选择器"></a>CSS 基础选择器</h1><h2 id="CSS-选择器的作用"><a href="#CSS-选择器的作用" class="headerlink" title="CSS 选择器的作用"></a>CSS 选择器的作用</h2><p>选择器(选择符)就是根据不同需求把不同的标签选出来这就是选择器的作用。简单来说，就是选择标签用的。</p><p><img src="http://img.cster.xyz/images/CSS-%E9%80%89%E6%8B%A9%E5%99%A8.png"></p><p>以上 CSS 做了两件事： </p><ol><li>找到所有的 h1 标签。 选择器（选对人）。</li><li>设置这些标签的样式，比如颜色为红色（做对事）。</li></ol><h2 id="基础选择器分类"><a href="#基础选择器分类" class="headerlink" title="基础选择器分类"></a>基础选择器分类</h2><p>选择器分为<strong>基础选择器</strong>和<strong>复合选择器</strong>两个大类。</p><ul><li>基础选择器是由单个选择器组成的</li><li>基础选择器又包括：标签选择器、类选择器、id 选择器和通配符选择器</li></ul><h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><p>标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;</span><br><span class="line">    属性1: 属性值1;</span><br><span class="line">    属性2: 属性值2;</span><br><span class="line">    属性3: 属性值3;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><p><strong>作用</strong></p><p>标签选择器可以把某一类标签全部选择出来，比如所有的 &lt;div&gt; 标签和所有的 &lt;span&gt; 标签。</p><p><strong>优点</strong></p><p>能快速为页面中同类型的标签统一设置样式。</p><p><strong>缺点</strong></p><p>不能设计差异化样式，只能选择全部的当前标签。</p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器。</p><p>类选择器在 HTML 中以 <strong>class 属性</strong>表示，在 CSS 中，类选择器以一个点 <strong>“.”</strong> 号显示。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">    属性1: 属性值1;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如，将所有拥有 red 类的 HTML 元素均为红色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构需要用 <strong>class 属性</strong>来调用 <strong>class 类</strong>的意思</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">‘red’</span>&gt;</span> 变红色 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li>类选择器使用 “.” （英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。</li><li>可以理解为给这个标签起了一个名字，来表示。</li><li>长名称或词组可以使用中横线来为选择器命名。</li><li>不要使用纯数字、中文等命名，尽量使用英文字母来表示</li><li>命名要有意义，尽量使别人一眼就知道这个类名的目的。</li><li>命名要规范。</li></ol><p><strong>多类名</strong></p><p><strong>多类名使用方式</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red font20&quot;</span>&gt;</span>亚瑟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>在标签 class 属性中写多个类名</li><li>多个类名中间必须用空格分开</li><li>这个标签就可以分别具有这些类名的样式</li></ol><p><strong>多类名开发中使用场景</strong></p><ol><li>可以把一些标签元素相同的样式（共同的部分）放到一个类里面。</li><li>这些标签都可以调用这个公共的类，然后再调用自己独有的类。</li><li>从而节省 CSS 代码，统一修改也非常方便。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pink fontWeight font20&quot;</span>&gt;</span>亚瑟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;font20&quot;</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;font14 pink&quot;</span>&gt;</span>安其拉<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;font14&quot;</span>&gt;</span>貂蝉<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>各个类名中间用空格隔开。</li><li>简单理解：就是给某个标签添加了多个类，或者这个标签有多个名字。</li><li>这个标签就可以分别具有这些类名的样式。</li><li>从而节省CSS代码，统一修改也非常方便。</li><li>多类名选择器在后期布局比较复杂的情况下，是较多使用的。</li></ul><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p><p>HTML 元素以 <strong>id 属性</strong>来设置 id 选择器，CSS 中 id 选择器以 <strong>“#”</strong> 来定义。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123;</span><br><span class="line">    属性1: 属性值1;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如，将 id 为 nav 元素中的内容设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：id 属性只能在每个 HTML 文档中出现一次。</strong></p><p><strong>id 选择器和类选择器的区别</strong></p><ol><li>类选择器（class）好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。</li><li>id 选择器好比人的身份证号码，全中国是唯一的，不得重复。</li><li>id 选择器和类选择器最大的不同在于使用次数上。</li><li>类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。</li></ol><h3 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h3><p>在 CSS 中，通配符选择器使用 *<em>“</em>“** 定义，它表示选取页面中所有元素（标签）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    属性1: 属性值1;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通配符选择器不需要调用， 自动就给所有的元素使用样式。</li><li>特殊情况才使用，以下是清除所有的元素标签的内外边距。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基础选择器总结"><a href="#基础选择器总结" class="headerlink" title="基础选择器总结"></a>基础选择器总结</h2><table><thead><tr><th align="center">基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td align="center">标签选择器</td><td>可以选出所有相同的标签</td><td>不能差异化选择</td><td>较多</td><td>p { color: red; }</td></tr><tr><td align="center">类选择器</td><td>可以选出1个或者多个标签</td><td>可以根据需求选择</td><td>非常多</td><td>.nav { color: red; }</td></tr><tr><td align="center">id选择器</td><td>一次只能选择一个标签</td><td>ID属性只能在每个 HTML 文档中出现一次</td><td>一般和js搭配使用</td><td>#nav { color: red; }</td></tr><tr><td align="center">通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况下使用</td><td>* { color: red; }</td></tr></tbody></table><ul><li>每个基础选择器都有使用场景，都需要掌握。</li><li>如果是修改样式， 类选择器是使用最多的。</li></ul><h1 id="CSS-字体属性"><a href="#CSS-字体属性" class="headerlink" title="CSS 字体属性"></a>CSS 字体属性</h1><p>CSS Fonts (字体)属性用于定义字体系列、大小、粗细、和文字样式（如斜体）。</p><h2 id="字体系列"><a href="#字体系列" class="headerlink" title="字体系列"></a>字体系列</h2><p>CSS 使用 <strong>font-family</strong> 属性定义文本的字体系列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>; &#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">font-family</span>: Arial,<span class="string">&quot;Microsoft Yahei&quot;</span>, <span class="string">&quot;微软雅黑&quot;</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下,如果有空格隔开的多个单词组成的字体,加引号</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常见的几个字体：body {font-family: ‘Microsoft YaHei’,tahoma,arial,’Hiragino Sans GB’; }</li></ul><h2 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h2><p>CSS 使用 <strong>font-size</strong> 属性定义字体大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px（像素）大小是我们网页的最常用的单位</li><li>谷歌浏览器默认的文字大小为16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小</li><li>可以给 body 指定整个页面文字的大小</li></ul><h2 id="字体粗细"><a href="#字体粗细" class="headerlink" title="字体粗细"></a>字体粗细</h2><p>CSS 使用 <strong>font-weight</strong> 属性设置文本字体的粗细。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th>描述</th></tr></thead><tbody><tr><td align="center">normal</td><td>默认值（不加粗）</td></tr><tr><td align="center">bold</td><td>定义粗体（加粗的）</td></tr><tr><td align="center">100-900</td><td>400 等同于 normal，而 700 等同于 bold （数字后面没有单位）</td></tr></tbody></table><ul><li>学会让加粗标签（比如 h 和 strong 等）不加粗，或者其他标签加粗。</li><li>实际开发时，我们更喜欢用数字表示粗细。</li></ul><h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><p>CSS 使用 <strong>font-style</strong> 属性设置文本的风格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th>作用</th></tr></thead><tbody><tr><td align="center">normal</td><td>默认值，浏览器会显示标准的字体样式 font-style: normal;</td></tr><tr><td align="center">italic</td><td>浏览器会显示斜体的字体样式。</td></tr></tbody></table><p><strong>注意：</strong> 平时我们很少给文字加斜体，反而要给斜体标签（em，i）改为不倾斜字体。</p><h2 id="字体复合属性"><a href="#字体复合属性" class="headerlink" title="字体复合属性"></a>字体复合属性</h2><p>字体属性可以把以上文字样式综合来写, 这样可以更节约代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: font-style font-weight font-size/line-height font-family;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用 font 属性时，必须按上面语法格式中的顺序书写，<strong>不能更换顺序</strong>，并且各个属性间以<strong>空格</strong>隔开。</li><li>不需要设置的属性可以省略（取默认值），但<strong>必须保留 font-size 和 font-family 属性</strong>，否则 font 属性将不起作用。</li></ul><h2 id="字体属性总结"><a href="#字体属性总结" class="headerlink" title="字体属性总结"></a>字体属性总结</h2><table><thead><tr><th align="center">属性</th><th align="center">表示</th><th>注意点</th></tr></thead><tbody><tr><td align="center">font-size</td><td align="center">字号</td><td>我们通常使用的单位是 px 像素，一定要记得写单位。</td></tr><tr><td align="center">font-family</td><td align="center">字体</td><td>实际中按团队约定来写字体。</td></tr><tr><td align="center">font-weight</td><td align="center">字体粗细</td><td>加粗是 700 或者 bold ，不加粗是 400 或者 normal 。数字后面没有单位。</td></tr><tr><td align="center">font-style</td><td align="center">字体样式</td><td>倾斜是 italic ，不倾斜是 normal ，工作中常用 normal 。</td></tr><tr><td align="center">font</td><td align="center">字体连写</td><td>1.字体连写有顺序，不能随意更换位置。2.其中字号和字体必须同时出现。</td></tr></tbody></table><h1 id="CSS-文本属性"><a href="#CSS-文本属性" class="headerlink" title="CSS 文本属性"></a>CSS 文本属性</h1><p>CSS Text（文本）属性可定义文本的外观，比如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等。</p><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><p><strong>color 属性</strong>用于定义文本的颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue 等</td></tr><tr><td>十六进制</td><td>#FF0000，#FF6600，#29D794</td></tr><tr><td>RGB代码</td><td>rgb(255,0,0)或者rgb(100%,0%,0%)</td></tr></tbody></table><p>开发中最常用的是十六进制.</p><h2 id="对齐文本"><a href="#对齐文本" class="headerlink" title="对齐文本"></a>对齐文本</h2><p><strong>text-align 属性</strong>用于设置元素内文本内容的水平对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">left</td><td align="center">左对齐（默认）</td></tr><tr><td align="center">right</td><td align="center">右对齐</td></tr><tr><td align="center">center</td><td align="center">居中对齐</td></tr></tbody></table><h2 id="装饰文本"><a href="#装饰文本" class="headerlink" title="装饰文本"></a>装饰文本</h2><p><strong>text-decoration 属性</strong>规定添加到文本的修饰。可以给文本添加下划线、删除线、上划线等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">none</td><td align="center">默认。没有装饰线。（最常用）</td></tr><tr><td align="center">underline</td><td align="center">下划线。链接 a 自带下划线。（常用）</td></tr><tr><td align="center">overline</td><td align="center">上划线。（几乎不用）</td></tr><tr><td align="center">line-through</td><td align="center">删除线。（不常用）</td></tr></tbody></table><h2 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h2><p><strong>text-indent 属性</strong>用来指定文本的第一行的缩进，通常是将段落的首行缩进。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过设置该属性，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>em 是一个相对单位，就是当前元素（font-size) 1 个文字的大小, 如果当前元素没有设置大小，则会按照父元素的 1 个文字大小。</p><h2 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h2><p><strong>line-height 属性</strong>用于设置行间的距离（行高）。可以控制文字行与行之间的距离。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img.cster.xyz/images/%E8%A1%8C%E9%97%B4%E8%B7%9D.png"></p><h2 id="文本属性总结"><a href="#文本属性总结" class="headerlink" title="文本属性总结"></a>文本属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>color</td><td>文本颜色</td><td>通常使用十六进制，而且是简写形式 #fff</td></tr><tr><td>text-align</td><td>文本对齐</td><td>可以设置文字水平的对齐方式</td></tr><tr><td>text-decoration</td><td>文本修饰</td><td>记住 添加下划线 underline 取消下划线 none即可</td></tr><tr><td>text-indent</td><td>文本缩进</td><td>通常我们用于锻炼首行缩进2个字的距离 text-indent: 2em;</td></tr><tr><td>line-height</td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h1 id="CSS-的引入方式"><a href="#CSS-的引入方式" class="headerlink" title="CSS 的引入方式"></a>CSS 的引入方式</h1><h2 id="CSS-的三种样式表"><a href="#CSS-的三种样式表" class="headerlink" title="CSS 的三种样式表"></a>CSS 的三种样式表</h2><p>按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：</p><ol><li><strong>行内样式表（行内式）</strong></li><li><strong>内部样式表（嵌入式）</strong></li><li><strong>外部样式表（链接式）</strong></li></ol><h2 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h2><p>行内样式表（内联样式表）是<strong>在元素标签内部的 style 属性中设定 CSS 样式</strong>。适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style 其实就是标签的属性。</li><li>在双引号中间，写法要符合 CSS 规范。</li><li>可以控制当前的标签设置样式。</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用。</li><li>使用行内样式表设定 CSS，通常也被称为<strong>行内式引入</strong>。</li></ul><h2 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h2><p>内部样式表（内嵌样式表）是写到html页面内部. 是将所有的 CSS 代码抽取出来，单独放到一个 &lt;style&gt; 标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">div &#123;</span><br><span class="line">        color: red;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>&lt;style&gt; 标签理论上可以放在 HTML 文档的任何地方，但一般会放在文档的&lt;head&gt;标签中。</li><li>通过此种方式，可以方便控制当前整个页面中的元素样式设置。</li><li>代码结构清晰，但是并没有实现结构与样式完全分离。</li><li>使用内部样式表设定 CSS，通常也被称为<strong>嵌入式引入</strong>，这种方式是我们练习时常用的方式。</li></ul><h2 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h2><p>实际开发都是外部样式表. 适合于样式比较多的情况. 核心是:样式单独写到CSS 文件中，之后把CSS文件引入到 HTML 页面中使用。</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为 .css 的样式文件，把所有 CSS 代码都放入此文件中。</li><li>在 HTML 页面中，使用 &lt;link&gt; 标签引入这个文件。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为 “stylesheet” ,表示被链接的文档是一个样式表文件。</td></tr><tr><td>href</td><td>定义所链接的外部样式表我就的URL，可以是相对路径，也可以是绝对路径。</td></tr></tbody></table><ul><li>使用外部样式表设定 CSS，通常也被称为<strong>外链式</strong>或<strong>链接式引入</strong>，这种方式是开发中常用的方式</li></ul><h2 id="CSS-引入方式总结"><a href="#CSS-引入方式总结" class="headerlink" title="CSS 引入方式总结"></a>CSS 引入方式总结</h2><table><thead><tr><th align="center">样式表</th><th align="left">优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td align="center">行内样式表</td><td align="left">书写方便，权重高</td><td>结构样式混写</td><td>较少</td><td>控制一个标签</td></tr><tr><td align="center">内部样式表</td><td align="left">部分结构与样式相分离</td><td>没有彻底分离</td><td>较少</td><td>控制一个页面</td></tr><tr><td align="center">外部样式表</td><td align="left">完全实现结构与样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table><h1 id="Chrome-调试工具"><a href="#Chrome-调试工具" class="headerlink" title="Chrome 调试工具"></a>Chrome 调试工具</h1><ol><li>Ctrl+滚轮 可以放大开发者工具代码大小。</li><li>左边是 HTML 元素结构，右边是 CSS 样式。</li><li>右边 CSS 样式可以改动数值（左右箭头或者直接输入）和查看颜色。</li><li>Ctrl + 0 复原浏览器大小。</li><li>如果点击元素，发现右侧没有样式引入，极有可能是类名或者样式引入错误。</li><li>如果有样式，但是样式前面有黄色叹号提示，则是样式属性书写错误。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML 常用标签整理</title>
    <link href="/2020/07/05/Web/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%E6%95%B4%E7%90%86/"/>
    <url>/2020/07/05/Web/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="HTML的基本骨架"><a href="#HTML的基本骨架" class="headerlink" title="HTML的基本骨架"></a>HTML的基本骨架</h1><h2 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML?"></a>什么是HTML?</h2><p>HTML 是用来描述网页的一种语言。</p><ul><li><p>HTML 指的是超文本标记语言: HyperText Markup Language</p></li><li><p>HTML 不是一种编程语言，而是一种标记语言</p></li><li><p>标记语言是一套标记标签 (markup tag)</p></li><li><p>HTML 使用标记标签来描述网页</p></li><li><p>HTML 文档包含了HTML 标签及文本内容</p></li><li><p>HTML文档也叫做 web 页面</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h1><table><thead><tr><th align="center">标签</th><th align="center">说明</th><th>备注</th></tr></thead><tbody><tr><td align="center">&lt;DOCTYPE&gt;</td><td align="center">文档声明</td><td>&lt;DOCTYPE html&gt;声明为HTML 5文档</td></tr><tr><td align="center">&lt;html&gt;&lt;/html&gt;</td><td align="center">是 HTML 页面的根元素</td><td>页面中最大的标签，根标签，所有标签都嵌套在里面。lang用来定义当前文档显示的语言。en定义语言为英语，zh-CN定义语言为简体中文。</td></tr><tr><td align="center">&lt;head&gt;&lt;/head&gt;</td><td align="center">包含了文档的元（meta）数据。</td><td>如 &lt;meta charset=”utf-8”&gt;;定义网页编码格式为 <strong>utf-8</strong>。嵌套了title,meta,style等标签。</td></tr><tr><td align="center">&lt;title&gt;&lt;/title&gt;</td><td align="center">描述了文档的标题</td><td>让页面有一个自己的网页标题。</td></tr><tr><td align="center">&lt;body&gt;&lt;/body&gt;</td><td align="center">包含了可见的页面内容</td><td>包含文档的所有内容，页面内容基本放在body中。</td></tr><tr><td align="center">&lt;meta charset=”UTF-8”&gt;</td><td align="center">设置网页字符编码</td><td>charset 常用的值有：GB2312 、BIG5 、GBK 和 UTF-8，其中 UTF-8 也被称为万国码，基本包含了全世界所有国家需要用到的字符。</td></tr><tr><td align="center">&lt;h1&gt;&lt;/h1&gt;</td><td align="center">标题标签</td><td>共6个，&lt;h1&gt;到&lt;h6&gt;。加了标题的文字会变的加粗，从 h1 到 h6 字号依次变小。一个标题独占一行。</td></tr><tr><td align="center">&lt;p&gt;&lt;/p&gt;</td><td align="center">段落标签</td><td>单词 paragraph 的缩写，意为段落。标签语义：可以把 HTML 文档分割为若干段落。特点：1. 文本在一个段落中会根据浏览器窗口的大小自动换行。2. 段落和段落之间保有空隙。</td></tr><tr><td align="center">&lt;br /&gt;</td><td align="center">换行标签（单标签）</td><td>单词 break 的缩写，意为打断、换行。标签语义：强制换行。特点：1.  &lt;br /&gt;是个单标签。2.  &lt;br /&gt;标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距。</td></tr><tr><td align="center">&lt;strong&gt;&lt;/strong&gt;或&lt;b&gt;&lt;/b&gt;</td><td align="center">加粗</td><td></td></tr><tr><td align="center">&lt;em&gt;&lt;/em&gt;或&lt;i&gt;&lt;/i&gt;</td><td align="center">倾斜</td><td></td></tr><tr><td align="center">&lt;del&gt;&lt;/del&gt;或&lt;s&gt;&lt;/s&gt;</td><td align="center">删除线</td><td></td></tr><tr><td align="center">&lt;ins&gt;&lt;/ins&gt;或&lt;u&gt;&lt;/u&gt;</td><td align="center">下划线</td><td></td></tr><tr><td align="center">&lt;!–  –&gt;</td><td align="center">注释</td><td>注释中的内容不会被执行</td></tr><tr><td align="center">&lt;div&gt;&lt;/div&gt;</td><td align="center">无语义</td><td>&lt;div&gt;&lt;/div&gt;标签用来布局，但是现在一行只能放一个&lt;div&gt;&lt;/div&gt;。 大盒子</td></tr><tr><td align="center">&lt;span&gt;&lt;/span&gt;</td><td align="center">无语义</td><td>&lt;span&gt;&lt;/span&gt;标签用来布局，一行上可以多个 &lt;span&gt;&lt;/span&gt;。小盒子</td></tr></tbody></table><h1 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h1><table><thead><tr><th align="center">标签</th><th align="center">说明</th><th>备注</th></tr></thead><tbody><tr><td align="center">&lt;img src=”url” /&gt;</td><td align="center">图像标签（单标签）</td><td>单词 image 的缩写，意为图像。src 是&lt;img&gt;标签的必须属性，它用于指定图像文件的路径和文件名。</td></tr></tbody></table><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本。图像不能显示时，显示文字</td></tr><tr><td>title</td><td>文本</td><td>提示文本。鼠标放到图像上时显示的文字</td></tr><tr><td>width</td><td>像素</td><td>设置图像宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像高度</td></tr><tr><td>border</td><td>像素</td><td>设置图像的边框粗细</td></tr></tbody></table><p>图像标签属性注意点：<br>① 图像标签可以拥有多个属性，必须写在标签名的后面。<br>② 属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。<br>③ 属性采取键值对的格式，即 key=“value” 的格式，属性 =“属性值”。</p><h2 id="相对路径："><a href="#相对路径：" class="headerlink" title="相对路径："></a>相对路径：</h2><table><thead><tr><th align="center">相对路径分类</th><th align="center">符号</th><th>说明</th></tr></thead><tbody><tr><td align="center">同一级路径</td><td align="center"></td><td>图像文件位于HTML文件同一级 如&lt;img src=”a.png” /&gt;</td></tr><tr><td align="center">下一级路径</td><td align="center">/</td><td>图像文件位于HTML文件下一级 如&lt;img src=”image/a.png” /&gt;</td></tr><tr><td align="center">上一级路径</td><td align="center">../</td><td>图像文件位于HTML文件上一级 如&lt;img src=”../a.png” /&gt;</td></tr></tbody></table><p>下下一级 image/image/a.png<br>上上一级 ../../a.png<br>叠加使用即可。</p><h1 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h1><table><thead><tr><th align="center">标签</th><th align="center">说明</th><th>备注</th></tr></thead><tbody><tr><td align="center">&lt;a href=”url”&gt;&lt;/a&gt;</td><td align="center">超链接标签</td><td>单词 anchor 的缩写，意为：锚。语法格式&lt;a href=”跳转目标” target=”目标窗口的弹出方式”&gt;文本或图像 &lt;/a&gt;</td></tr></tbody></table><h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="center">属性</th><th>作用</th></tr></thead><tbody><tr><td align="center">href</td><td>用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，他就具有了超链接的功能。</td></tr><tr><td align="center">target</td><td>用于指定链接页面的打开方式，_self为在原标签页中打开_blank为在新标签页中打开，其中_self为默认值。</td></tr></tbody></table><h1 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h1><table><thead><tr><th align="center">标签</th><th align="center">说明</th><th>备注</th></tr></thead><tbody><tr><td align="center">&lt;table&gt;&lt;/table&gt;</td><td align="center">表格</td><td>用于定义表格的标签</td></tr><tr><td align="center">&lt;tr&gt;&lt;/tr&gt;</td><td align="center">行</td><td>用于定义表格中的行，必须嵌套在 &lt;table&gt; &lt;/table&gt;标签中。</td></tr><tr><td align="center">&lt;td&gt;&lt;/td&gt;</td><td align="center">单元格</td><td>用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签。字母 td 指表格数据（table data），即数据单元格的内</td></tr><tr><td align="center">&lt;th&gt;&lt;/th&gt;</td><td align="center">表头</td><td>表格第一行，加粗，HTML 表格的表头部分(table head 的缩写）</td></tr><tr><td align="center">&lt;thead&gt;&lt;/thead&gt;</td><td align="center">表格头部</td><td>用于定义表格的头部。&lt;thead&gt; 内部必须拥有 &lt;tr&gt; 标签般是位于第一行。</td></tr><tr><td align="center">&lt;tbody&gt;&lt;/tbody&gt;</td><td align="center">表格主体</td><td>用于定义表格的主体，主要用于放数据本体。</td></tr></tbody></table><h2 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="center">属性名</th><th align="center">属性值</th><th>描述</th></tr></thead><tbody><tr><td align="center">align</td><td align="center">left、center、right</td><td>规定表格相对周围元素的对齐方式。</td></tr><tr><td align="center">border</td><td align="center">“”或”1”或”2”…</td><td>规定表格单元是否拥有边框，默认为””，表示为没有边框</td></tr><tr><td align="center">cellpadding</td><td align="center">像素值</td><td>规定单元边沿与其内容之间的空白，默认1像素</td></tr><tr><td align="center">cellspacing</td><td align="center">像素值</td><td>规定单元格之间的空白，默认2像素</td></tr><tr><td align="center">width</td><td align="center">像素值或百分比</td><td>规定表格的宽度</td></tr></tbody></table><h2 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h2><p>跨行合并：rowspan=”合并单元格的个数”<br>跨列合并：colspan=”合并单元格的个”<br><strong>属性填写在&lt;th&gt;&lt;/th&gt;标签中</strong><br>跨行：最上侧单元格为目标单元格, 写合并代码<br>跨列：最左侧单元格为目标单元格, 写合并代码<br><strong>合并单元格三步曲：</strong></p><ol><li>先确定是跨行还是跨列合并。</li><li>找到目标单元格. 写上合并方式 = 合并的单元格数量。比如：&lt;td colspan=”2”&gt;&lt;/td&gt;。</li><li>删除多余的单元</li></ol><h1 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h1><table><thead><tr><th align="center">标签</th><th align="center">说明</th><th>备注</th></tr></thead><tbody><tr><td align="center">&lt;ul&gt;&lt;/ul&gt;</td><td align="center">无序列表</td><td>HTML 页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用 &lt;li&gt; 标签定义。</td></tr><tr><td align="center">&lt;ol&gt;&lt;/ol&gt;</td><td align="center">有序列表</td><td>&lt;ol&gt; 标签用于定义有序列表，列表排序以数字来显示，并且使用 &lt;li&gt; 标签来定义列表项。</td></tr><tr><td align="center">&lt;li&gt;&lt;/li&gt;</td><td align="center">列表项</td><td>与&lt;ol&gt;和&lt;ul&gt;配合使用</td></tr><tr><td align="center">&lt;dl&gt;&lt;/dl&gt;</td><td align="center">自定义列表</td><td>标签用于定义描述列表（或定义列表），该标签会与 &lt;dt&gt;和&lt;dd&gt;一起使用。</td></tr><tr><td align="center">&lt;dt&gt;&lt;/dt&gt;</td><td align="center">列表项</td><td>定义项目/名字</td></tr><tr><td align="center">&lt;dd&gt;&lt;/dd&gt;</td><td align="center">列表项</td><td>描述每一个项目/名字</td></tr></tbody></table><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>无序列表的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>无序列表的各个列表项之间没有顺序级别之分，是并列的。</li><li>&lt;ul&gt;&lt;/ul&gt; 中只能嵌套 &lt;li&gt;&lt;/li&gt;，直接在 &lt;ul&gt;&lt;/ul&gt; 标签中输入其他标签或者文字的做法是不被允许的。</li><li>&lt;li&gt; 与 &lt;/li&gt; 之间相当于一个容器，可以容纳所有元素。</li><li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用 CSS 来设置。</li></ol><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>有序列表的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>&lt;ol&gt;&lt;/ol&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ol&gt;&lt;/ol&gt;标签中输入其他标签或者文字的做法是不被允许的。</li><li>&lt;li&gt; 与 &lt;/li&gt;之间相当于一个容器，可以容纳所有元素。</li><li>有序列表会带有自己样式属性，但在实际使用时，我们会使用 CSS 来设置。</li></ol><h2 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h2><p>自定义列表的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>&lt;dl&gt;&lt;/dl&gt; 里面只能包含 &lt;dt&gt; 和 &lt;dd&gt;。</li><li>&lt;dt&gt; 和 &lt;dd&gt;个数没有限制，经常是一个&lt;dt&gt; 对应多个&lt;dd&gt;。</li></ol><h2 id="列表总结"><a href="#列表总结" class="headerlink" title="列表总结"></a>列表总结</h2><table><thead><tr><th align="center">标签名</th><th align="center">定义</th><th>说明</th></tr></thead><tbody><tr><td align="center">&lt;ul&gt;&lt;/ul&gt;</td><td align="center">无序列表</td><td>里面只能包含 li ，没有编号，使用较多。li 里面可以包含任何标签</td></tr><tr><td align="center">&lt;ol&gt;&lt;/ol&gt;</td><td align="center">有序列表</td><td>里面只能包含 li ，有编号，相对使用较少。li 里面可以包含任何标签</td></tr><tr><td align="center">&lt;dl&gt;&lt;/dl&gt;</td><td align="center">自定义列表</td><td>里面只能包含 dt 和 dd ，dt 和 dd 里面可以放任何标签</td></tr></tbody></table><h1 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h1><table><thead><tr><th align="center">标签</th><th align="center">说明</th><th>备注</th></tr></thead><tbody><tr><td align="center">&lt;form&gt;&lt;/form&gt;</td><td align="center">表单域</td><td></td></tr><tr><td align="center">&lt;input type=”属性值” /&gt;</td><td align="center">输入表单元素</td><td>在英文单词中，input 是输入的意思，而在表单元素中 &lt;input /&gt; 标签用于收集用户信息。type 属性设置不同的属性值用来指定不同的控件类型。</td></tr><tr><td align="center">&lt;label&gt;&lt;/label&gt;</td><td align="center">input 元素定义标注（标签）</td><td>用于绑定一个表单元素, 当点击&lt;label&gt; 标签内的文本时，浏览器就会自动将焦点(光标)转到或者选择对应的表单元素上,用来增加用户体验</td></tr><tr><td align="center">&lt;select&gt;&lt;/select&gt;</td><td align="center">下拉表单元素</td><td>有多个选项让用户选择，并且想要节约页面空间时，我们可以使用&lt;select&gt;标签控件定义下拉列表</td></tr><tr><td align="center">&lt;option&gt;&lt;/option&gt;</td><td align="center">下拉选项</td><td></td></tr><tr><td align="center">&lt;textarea&gt;&lt;/textarea&gt;</td><td align="center">文本域元素</td><td></td></tr></tbody></table><h2 id="输入表单元素"><a href="#输入表单元素" class="headerlink" title="输入表单元素"></a>输入表单元素</h2><h3 id="type-属性的属性值及其描述如下："><a href="#type-属性的属性值及其描述如下：" class="headerlink" title="type 属性的属性值及其描述如下："></a>type 属性的属性值及其描述如下：</h3><table><thead><tr><th align="center">属性值</th><th>描述</th></tr></thead><tbody><tr><td align="center">button</td><td>定义可点击按钮（多数情况下，用于通过 JavaScript 启动脚本）。</td></tr><tr><td align="center">checkbox</td><td>定义复选框。</td></tr><tr><td align="center">file</td><td>定义输入字段和 “浏览” 按钮，供文件上传。</td></tr><tr><td align="center">hidden</td><td>定义隐藏的输入字段。</td></tr><tr><td align="center">image</td><td>定义图像形式的提交按钮</td></tr><tr><td align="center">password</td><td>定义密码字段。该字段中的字符被掩码。</td></tr><tr><td align="center">radio</td><td>定义单选按钮。</td></tr><tr><td align="center">reset</td><td>定义重置按钮。重置按钮会清除表单中的所有数据。</td></tr><tr><td align="center">submit</td><td>定义提交按钮。提交按钮会把表单数据发送到服务器。</td></tr><tr><td align="center">text</td><td>定义单行的输入字段，用户在其中输入文本。默认宽带为20个字符。</td></tr></tbody></table><h3 id="除-type-属性外，-lt-input-gt-标签还有其他很多属性，其常用属性如下："><a href="#除-type-属性外，-lt-input-gt-标签还有其他很多属性，其常用属性如下：" class="headerlink" title="除 type 属性外，&lt;input&gt;标签还有其他很多属性，其常用属性如下："></a>除 type 属性外，&lt;input&gt;标签还有其他很多属性，其常用属性如下：</h3><table><thead><tr><th align="center">属性</th><th align="center">属性值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">name</td><td align="center">用户自定义</td><td align="center">定义input元素的名称。</td></tr><tr><td align="center">value</td><td align="center">用户自定义</td><td align="center">规定input元素的值。</td></tr><tr><td align="center">checked</td><td align="center">checked</td><td align="center">规定此input元素首次加载时应该被选中。</td></tr><tr><td align="center">maxlength</td><td align="center">正整数</td><td align="center">规定输入字段中的字符的最大长度。</td></tr></tbody></table><ol><li>name 和value 是每个表单元素都有的属性值,主要给后台人员使用。</li><li>name 表单元素的名字, 要求 单选按钮和复选框要有相同的name值。</li><li>checked属性主要针对于单选按钮和复选框, 主要作用一打开页面,就要可以默认选中某个表单元素。</li><li>maxlength 是用户可以在表单元素输入的最大字符数, 一般较少使用。</li></ol><hr><ol><li>有些表单元素想刚打开页面就默认显示几个文字怎么做?<br> 答: 可以给这些表单元素设置 value 属性=”值”</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span> /&gt;</span> </span><br></pre></td></tr></table></figure><ol start="2"><li>页面中的表单元素很多，如何区别不同的表单元素？<br> 答: name 属性：当前 input 表单的名字，后台可以通过这个 name 属性找到这个表单。页面中的表单很多，name 的主要作用就是用于区别不同的表单。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span> </span><br></pre></td></tr></table></figure><ul><li>name 属性后面的值，是自定义的</li><li>radio (或者checkbox）如果是一组，我们必须给他们命名相同的名字</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><ol start="3"><li><p>如何让页面一打开就让某个单选按钮或者复选框是选中状态?<br>答: checked 属性：表示默认选中状态。用于单选按钮和复选按钮。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性别：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure></li><li><p>如何让input表单元素展示不同的形态? 比如单选按钮或者文本框<br>答：type属性：type属性可以让input表单元素设置不同的形态</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure></li></ol><h3 id="lt-label-gt-lt-label-gt-标签"><a href="#lt-label-gt-lt-label-gt-标签" class="headerlink" title="&lt;label&gt;&lt;/label&gt;标签"></a>&lt;label&gt;&lt;/label&gt;标签</h3><p>&lt;label&gt; 标签为 input 元素定义标注（标签）<br>&lt;label&gt; 标签用于绑定一个表单元素, 当点击&lt;label&gt; 标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上,用来增加用户体验<br>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>核心： &lt;label&gt; 标签的 for 属性应当与相关元素的 id 属性相同</p><h2 id="下拉表单元素"><a href="#下拉表单元素" class="headerlink" title="下拉表单元素"></a>下拉表单元素</h2><p>在页面中，如果有多个选项让用户选择，并且想要节约页面空间时，我们可以使用&lt;select&gt;标签控件定义下拉列表。</p><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>&lt;select&gt; 中至少包含一对&lt;option&gt;。</li><li>在&lt;option&gt; 中定义 selected =“ selected “ 时，当前项即为默认选中项。</li></ol><h2 id="文本域表单元素"><a href="#文本域表单元素" class="headerlink" title="文本域表单元素"></a>文本域表单元素</h2><p>使用场景: 当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用&lt;textarea&gt; 标签。<br>在表单元素中，&lt;textarea&gt; 标签是用于定义多行文本输入的控件。<br>使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。<br>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>通过 &lt;textarea&gt; 标签可以轻松地创建多行文本输入框。</p></li><li><p>cols=“每行中的字符数”，rows=“显示的行数”，我们在实际开发中不会使用，都是用 CSS 来改变大小。</p></li><li><h2 id="表单元素总结"><a href="#表单元素总结" class="headerlink" title="表单元素总结"></a>表单元素总结</h2></li><li><p>表单元素我们学习了三大组 input 输入表单元素 select 下拉表单元素 textarea 文本域表单元素。</p></li><li><p>这三组表单元素都应该包含在form表单域里面,并且有 name 属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;籍贯&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>有三个名字非常相似的标签：</p><table><thead><tr><th>表单域 form</th><th>使用场景：提交区域内表单元素给后台服务器</th></tr></thead><tbody><tr><td>文件域 file</td><td>是input type属性值，使用场景: 上传文件</td></tr><tr><td>文本域 textarea</td><td>使用场景: 可以输入多行文字, 比如留言板 网站介绍等…</td></tr></tbody></table></li></ol><h1 id="HTML中的特殊字符"><a href="#HTML中的特殊字符" class="headerlink" title="HTML中的特殊字符"></a>HTML中的特殊字符</h1><table><thead><tr><th align="center">特殊字符</th><th align="center">描述</th><th align="center">字符的代码</th></tr></thead><tbody><tr><td align="center"></td><td align="center">空格</td><td align="center">&amp;nbsp;</td></tr><tr><td align="center">&lt;</td><td align="center">小于号</td><td align="center">&amp;lt;</td></tr><tr><td align="center">&gt;</td><td align="center">大于号</td><td align="center">&amp;gt;</td></tr><tr><td align="center">&amp;</td><td align="center">和号</td><td align="center">&amp;amp;</td></tr><tr><td align="center">¥</td><td align="center">人民币</td><td align="center">&amp;yen;</td></tr><tr><td align="center">©</td><td align="center">版权</td><td align="center">&amp;copy;</td></tr><tr><td align="center">®</td><td align="center">注册商标</td><td align="center">&amp;reg;</td></tr><tr><td align="center">°</td><td align="center">摄氏度</td><td align="center">&amp;deg;</td></tr><tr><td align="center">±</td><td align="center">正负号</td><td align="center">&amp;plusmn;</td></tr><tr><td align="center">×</td><td align="center">乘号</td><td align="center">&amp;times</td></tr><tr><td align="center">÷</td><td align="center">除号</td><td align="center">&amp;divide;</td></tr><tr><td align="center">²</td><td align="center">平方2（上标2）</td><td align="center">&amp;sup2;</td></tr><tr><td align="center">³</td><td align="center">立方3（上标3）</td><td align="center">&amp;sup3;</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 美化</title>
    <link href="/2020/07/03/Ubuntu/Ubuntu%E7%BE%8E%E5%8C%96/"/>
    <url>/2020/07/03/Ubuntu/Ubuntu%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1>一、引导界面美化</h1><p>首先下载GRUB主题，在 <a href="https://www.gnome-look.org/">https://www.gnome-look.org</a> 或者 Github 都有很多GRUB主题，我选择的是主题Tela 。<br>主题下载地址： <a href="https://www.gnome-look.org/p/1307852/">https://www.gnome-look.org/p/1307852/</a><br>开机界面如下：<br><img src="http://img.cster.xyz/images/%E5%90%AF%E5%8A%A8%E7%95%8C%E9%9D%A2.jpg"><br>下载后解压，直接在终端执行 install.sh 的脚本文件即可完成主题设置，不同主题安装方法不同，主题下载界面一般说明了安装方法。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
